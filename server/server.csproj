<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>..\client\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <SpaProxyServerUrl>https://localhost:44469</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <AssemblyName>OfficeBooking</AssemblyName>
    <noWarn>1591</noWarn>
    <UserSecretsId>cedb4a03-8ab1-4986-ad36-f1de494d5ae3</UserSecretsId>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Azure.Extensions.AspNetCore.Configuration.Secrets" Version="1.3.0" />
    <PackageReference Include="Google.Cloud.RecaptchaEnterprise.V1" Version="2.8.0" />
    <PackageReference Include="IdentityModel" Version="6.2.0" />
    <PackageReference Include="Microsoft.ApplicationInsights" Version="2.22.0" />
    <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.21.0" />
    <PackageReference Include="Microsoft.Identity.Web" Version="2.15.3" />
    <PackageReference Include="Microsoft.IdentityModel.Protocols.OpenIdConnect" Version="7.0.3" />
    <PackageReference Include="Moq.AutoMock" Version="3.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="6.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="6.5.0" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="8.0.1" />
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="8.0.1" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="8.0.1" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="8.0.1" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="8.0.1" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.0" />
  </ItemGroup>
  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
<<<<<<< HEAD
    <!-- TODO: update links; delete and add missing  -->
=======
    <!-- TODO: update imports to ts -->
>>>>>>> develop
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    <None Update="..\client\src\setupProxy.ts">
      <Link>src\setupProxy.ts</Link>
    </None>
    <!-- Common -->    
    <None Update="..\client\src\components\Common\Dialog.tsx">
      <Link>src\components\Common\Dialog.tsx</Link>
    </None>
    <None Update="..\client\src\components\Common\Heading.tsx">
      <Link>src\components\Common\Heading.tsx</Link>
    </None>
    <None Update="..\client\src\components\Common\Loading.tsx">
      <Link>src\components\Common\Loading.tsx</Link>
    </None>
    <None Update="..\client\src\components\Common\LoginButton.tsx">
      <Link>src\components\Common\LoginButton.tsx</Link>
    </None>
    <!-- History Page -->
    <None Update="..\client\src\components\HistoryPage\HistoryPage.tsx">
      <Link>src\components\HistoryPage\HistoryPage.tsx</Link>
    </None>
    <None Update="..\client\src\components\HistoryPage\HistoryBookingItem.tsx">
      <Link>src\components\HistoryPage\HistoryBookingItem.tsx</Link>
    </None>
    <None Update="..\client\src\components\HistoryPage\HistoryBookingSvg.tsx">
      <Link>src\components\HistoryPage\HistoryBookingSvg.tsx</Link>
    </None>
    <!-- Login Page -->
    <None Update="..\client\src\components\LoginPage\LoginPage.tsx.js">
      <Link>src\components\LoginPage\LoginPage.tsx</Link>
    </None>
    <!-- Navbar -->
    <None Update="..\client\src\components\Navbar\Navbar.tsx">
      <Link>src\components\Navbar\Navbar.tsx</Link>
    </None>
    <None Update="..\client\src\components\Navbar\NavbarLogo\NavbarLogo.tsx">
      <Link>src\components\Navbar\NavbarLogo\NavbarLogo.tsx</Link>
    </None>
    <None Update="..\client\src\components\Navbar\NavbarItem\NavbarItem.tsx">
      <Link>src\components\Navbar\NavbarItem\NavbarItem.tsx</Link>
    </None>
    <None Update="..\client\src\components\Navbar\NavbarLogoutButton\NavbarLogoutButton.tsx">
      <Link>src\components\Navbar\NavbarLogoutButton\NavbarLogoutButton.tsx</Link>
    </None>
    <!-- Overview Page -->
    <None Update="..\client\src\components\OverviewPage\OverviewPage.tsx">
      <Link>src\components\OverviewPage\OverviewPage.tsx</Link>
    </None>
    <None Update="..\client\src\components\OverviewPage\OverviewDateSwitchButton.tsx">
      <Link>src\components\OverviewPage\OverviewDateSwitchButton.tsx</Link>
    </None>
    <None Update="..\client\src\components\OverviewPage\OverviewEventModeButton.tsx">
      <Link>src\components\OverviewPage\OverviewEventModeButton.tsx</Link>
    </None>
    <None Update="..\client\src\components\OverviewPage\OverviewMap\OverviewMap.tsx">
      <Link>src\components\OverviewPage\OverviewMap\OverviewMap.tsx</Link>
    </None>
    <None Update="..\client\src\components\OverviewPage\OverviewMap\Map.tsx">
      <Link>src\components\OverviewPage\OverviewMap\Map.tsx</Link>
    </None>
    <!-- Core -->
    <!-- Auth  -->
    <None Update="..\client\src\core\auth\AuthContext.ts">
      <Link>src\core\auth\AuthContext.ts</Link>
    </None>
    <None Update="..\client\src\core\auth\AuthProvider.ts">
      <Link>src\core\auth\AuthProvider.ts</Link>
    </None>
    <None Update="..\client\src\core\auth\isAuthenticated.tsx">
      <Link>src\core\auth\isAuthenticated.tsx</Link>
    </None>
    <None Update="..\client\src\core\auth\useAuthContext.ts">
      <Link>src\core\auth\useAuthContext.ts</Link>
    </None>
    <!-- Routes  -->
    <None Update="..\client\src\routes\ProtectedRoute.tsx">
      <Link>src\routes\ProtectedRoute.tsx</Link>
    </None>
    <None Update="..\client\src\routes\Routers.tsx">
      <Link>src\routes\Routes.tsx</Link>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="..\client\public\images\">
      <Link>public\images</Link>
    </Folder>
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="Migrations\20231110113625_InitialCreate.cs" />
    <Compile Remove="Migrations\20231110113625_InitialCreate.Designer.cs" />
  </ItemGroup>
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />
    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>